{"version":3,"sources":["webpack:///webpack/bootstrap c2a7dfa1e132fa5e2346","webpack:///./playspecs.js","webpack:///./parser.js"],"names":[],"mappings":"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","file":"playspecs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c2a7dfa1e132fa5e2346\n **/","/* @flow */\n\n//const Parser = require(\"parser.js\").Parser;\n//\n//var p = new Parser();\n//\n//console.log(p);\n//\n//export Parser;\n\nimport {Parser, tokenTypes} from \"./parser\";\n\nexport function hi() {\n    console.log(\"hello there\");\n}\n\nexports.Parser = {Parser:Parser, tokenTypes:tokenTypes};\n\n\n/** WEBPACK FOOTER **\n ** ./playspecs.js\n **/","/* @flow */\n\nexport const tokenTypes:{ [key: string]: string } = {\n    WHITESPACE: \" \",\n    CONCATENATION: \",\",\n    // Bounding integers are tokenized as part of the dots to minimize potential conflicts with user-provided syntax.\n    DOTS_GREEDY: \"...\",\n    DOTS_RELUCTANT: \"..\",\n    DOTS_OMEGA: \"***\",\n    LEFT_PAREN: \"(\",\n    RIGHT_PAREN: \")\",\n    ALTERNATION: \";\",\n    INTERSECTION: \"^\",\n    AND: \"&\",\n    OR: \"|\",\n    NOT: \"not\",\n    START: \"start\",\n    END: \"end\",\n    ERROR: \"error\"\n};\n\ntype MatchResult = Array < string >;\n\ntype TokenDefinition = Array < {\n        type: string,\n        match: string | Array < string > | RegExp,\n        value? : ((mr:MatchResult) => any),\n        tightness? : number,\n        startParse? : ((p:Parser, t:Token) => ParseTree),\n        extendParse? : ((p:Parser, pt:ParseTree, t:Token) => ParseTree)\n    } >;\n\ntype Token = {\n    type: string,\n    value: any,\n    range: {start: number, end: number},\n    definition: TokenDefinition\n};\n\ntype ParseTree = object;\n\ntype TokenStream = {\n    tokens: Array < Token >,\n    position: number,\n    errors: Array < number >\n};\n\nexport const standardTokens:Array<TokenSchema> = [\n    {\n        type: tokenTypes.WHITESPACE,\n        match: /^\\s+/\n    },\n    {\n        type: tokenTypes.CONCATENATION,\n        match: [tokenTypes.CONCATENATION]\n    },\n    {\n        type: tokenTypes.DOTS_GREEDY,\n        match: /^([0-9]*)\\s*\\.\\.\\.\\s*([0-9]*)/\n    },\n    {\n        type: tokenTypes.DOTS_RELUCTANT,\n        match: /^([0-9]*)\\s*\\.\\.\\s*([0-9]*)/\n    },\n    {\n        type: tokenTypes.DOTS_OMEGA,\n        match: [tokenTypes.DOTS_OMEGA]\n    },\n    {\n        type: tokenTypes.LEFT_PAREN,\n        match: [tokenTypes.LEFT_PAREN]\n    },\n    {\n        type: tokenTypes.RIGHT_PAREN,\n        match: [tokenTypes.RIGHT_PAREN]\n    },\n    {\n        type: tokenTypes.ALTERNATION,\n        match: [tokenTypes.ALTERNATION]\n    },\n    {\n        type: tokenTypes.INTERSECTION,\n        match: [tokenTypes.INTERSECTION]\n    },\n    {\n        type: tokenTypes.AND,\n        match: [tokenTypes.AND]\n    },\n    {\n        type: tokenTypes.OR,\n        match: [tokenTypes.OR]\n    },\n    {\n        type: tokenTypes.NOT,\n        match: [tokenTypes.NOT]\n    },\n    {\n        type: tokenTypes.START,\n        match: [tokenTypes.START]\n    },\n    {\n        type: tokenTypes.END,\n        match: [tokenTypes.END]\n    },\n    {\n        type: tokenTypes.ERROR,\n        match: /^\\S+/\n    }\n];\n\nexport class Parser {\n    constructor(context) {\n        this.tokenDefinitions = [];\n        this.tokensByType = {};\n        const tokens = (context.tokens || []).concat(standardTokens);\n        for (let ti = 0; ti < tokens.length; ti++) {\n            const input = tokens[ti];\n            const defn = {\n                type: input.type,\n                match: input.match instanceof String ? [input.match] : input.match,\n                value: input.value || function (mr) {\n                    return mr[0];\n                },\n                tightness: input.tightness || 0,\n                startParse: input.startParse || function (_parser, token) {\n                    return token;\n                },\n                extendParse: input.extendParse || function (parser, token, parseTree) {\n                    return parser.error(\"Can't extend a parse tree with a value type\", token, parseTree);\n                }\n            };\n            this.tokenDefinitions.push(defn);\n            this.tokensByType[defn.type] = defn;\n        }\n    }\n\n    tokenize(str:string):TokenStream {\n        let result:Array<Token> = [];\n        let errors:Array<number> = [];\n        let substring:string = str;\n        let index:number = 0;\n        while (substring.length) {\n            for (let ti = 0; ti < this.tokenDefinitions.length; ti++) {\n                const tokenDefinition = this.tokenDefinitions[ti];\n                const match = tokenDefinition.match;\n                let matchResult = null;\n                if (match instanceof RegExp) {\n                    matchResult = match.exec(substring);\n                } else if (Array.isArray(match)) {\n                    for (let mi = 0; mi < match.length; mi++) {\n                        const candidate = match[mi];\n                        if (substring.substr(0, candidate.length) == candidate) {\n                            matchResult = [candidate];\n                            matchResult.index = 0;\n                        }\n                    }\n                }\n                if (matchResult && matchResult.index == 0) {\n                    const matchLength = matchResult[0].length;\n                    substring = substring.substr(matchResult[0].length);\n                    const oldIndex = index;\n                    index += matchLength;\n                    if (tokenDefinition.type !== tokenTypes.WHITESPACE) {\n                        if (tokenDefinition.type === tokenTypes.ERROR) {\n                            errors.push(result.length);\n                        }\n                        result.push({\n                            type: tokenDefinition.type,\n                            value: tokenDefinition.value(matchResult),\n                            range: {start: oldIndex, end: index},\n                            definition: tokenDefinition\n                        });\n                    }\n                    break;\n                }\n            }\n        }\n        return ({tokens: result, position: 0, errors: errors} : TokenStream);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./parser.js\n **/"],"sourceRoot":""}